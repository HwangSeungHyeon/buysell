name: CD

on:
  workflow_dispatch:
  push:
    branches: [ "main", "dev" ]

jobs:
  deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 명령 실행을 위한 권한을 부여
        run: chmod +x ./gradlew

      - name: Gradle jar 파일만 만들기
        run: ./gradlew clean bootJar

      - name: jar 파일을 서버로 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "./build/libs/*.jar"
          target: "~"
          strip_components: 2

      - name: SSH Commands
        uses: appleboy/ssh-action@master
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SMTP_NAME: ${{ secrets.SMTP_NAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DOMAIN: ${{ secrets.DOMAIN }}
          FRONT_URL: ${{ secrets.FRONT_URL }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
          NAVER_REDIRECT_URI: ${{ secrets.NAVER_REDIRECT_URI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          envs: SPRING_DATASOURCE_URL,JWT_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,KAKAO_CLIENT_ID,KAKAO_CLIENT_SECRET,NAVER_CLIENT_ID,NAVER_CLIENT_SECRET,REDIS_HOST,REDIS_PORT,SMTP_NAME,SMTP_PASSWORD,DOMAIN,FRONT_URL,SERVER_URL,GOOGLE_REDIRECT_URI,KAKAO_REDIRECT_URI,NAVER_REDIRECT_URI,AWS_ACCESS_KEY_ID,AWS_BUCKET,AWS_SECRET_ACCESS_KEY
          script_stop: true
          script: |
            pids=$(ps -ef | grep java | grep -v grep | grep '.jar' | awk '{print $2}')
            if [ -n "$pids" ]; then
              echo "종료할 프로세스 ID = $pids"
              kill -9 $pids
            else
              echo "종료할 Java JAR 프로세스가 없습니다."
            fi
            nohup java -jar *.jar 1> /dev/null 2>&1 &

      - name: 배포 결과를 Slack 으로 알림
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 백엔드 배포 실패 알림
          fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()