spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/testDB
    username: test
    password: 123
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: false
        highlight_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            #redirect_uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID} # REST API Key
            client-secret: ${KAKAO_CLIENT_SECRET} # Client Secret Key
            #redirect-uri: http://localhost:8080/login/oauth2/code/kakao # Redirect URI
            scope:
              - account_email


    user:
      password: 1
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${smtp.name}
    password: ${smtp.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

springdoc:
  swagger-ui:
    operations-sorter: method

logging:
  level:
    org:
      hibernate:
        sql: debug
        orm:
          jdbc:
            bind: trace

cloud:
  aws:
    s3:
      bucket: ${aws.bucket}
    credentials:
      access-key: ${aws.accessKey}
      secret-key: ${aws.secretKey}
    region:
      static: ap-northeast-2
    stack:
      auto: false



auth:
  jwt:
    issuer: team.sparta.com
    secret: ${jwt.secret}
    accessTokenExpirationHour: 1680